@page "/admin"
@using System.Text.Json
@using Movies.Blazor.Models
@attribute [StreamRendering]
@rendermode InteractiveServer
@inject IHttpClientFactory _clientFactory

<PageTitle>Weather</PageTitle>

<h1>Weather</h1>

<p>This component demonstrates showing data.</p>

@if (movies == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>All movies catalog</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var movie in movies)
            {
                <tr>
                    <td>@movie.Title</td>
                    <td>
                        <button class="btn btn-danger" @onclick="() => DeleteMovie(movie)">Delete</button>
                    </td>
                    <td>
                        <button class="btn btn-warning" @onclick="() => EditMovie(movie.Id)">Edit</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private List<Movie> movies;

    protected override async Task OnInitializedAsync()
    {
        var client = _clientFactory.CreateClient("MoviesApi");
        var response = await client.GetAsync("movies");

        if (response.IsSuccessStatusCode)
        {
            var content = await response.Content.ReadAsStringAsync();
            movies = JsonSerializer.Deserialize<List<Movie>>(content, new JsonSerializerOptions() { PropertyNameCaseInsensitive = true })!;
        }
        else
        {
            // Handle the error
        }
    }

    async Task DeleteMovie(Movie movie)
    {
        var client = _clientFactory.CreateClient("MoviesApi");
        var response = await client.DeleteAsync($"movies/{movie.Id}/{movie.ReleaseYear}");
        if (response.IsSuccessStatusCode)
        {
            movies.RemoveAll(m => m.Id == movie.Id);
        }
        else
        {
            // Handle the error
        }
    }

    private void EditMovie(string id)
    {
        // NavigationManager.NavigateTo($"/edit/{id}");
    }
}
